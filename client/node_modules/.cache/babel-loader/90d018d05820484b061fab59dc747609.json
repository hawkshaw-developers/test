{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\91701\\\\Desktop\\\\hookup\\\\test\\\\client\\\\src\\\\Billing-Table\\\\Multiple_Table.js\";\nimport React, { Component } from 'react';\nimport Dropdown from '../DropDown/Dropdown';\nimport './Table-style.css';\nimport './Multiple-Table.css';\nconst techCompanies = [{\n  label: \"Apple\",\n  value: 1\n}, {\n  label: \"Facebook\",\n  value: 2\n}, {\n  label: \"Netflix\",\n  value: 3\n}, {\n  label: \"Tesla\",\n  value: 4\n}, {\n  label: \"Amazon\",\n  value: 5\n}, {\n  label: \"Alphabet\",\n  value: 6\n}];\nexport default class MutipleTable extends Component {\n  constructor(props) {\n    super(props);\n\n    this.valueChanged = event => {\n      console.log(\"Value is----------->\", this.state.selectedItems);\n      this.setState({\n        qty: event.target.value\n      });\n      var temp = this.state.tableItems;\n      var obj = {};\n      obj.id = event.target.parentNode.parentNode.rowIndex;\n      obj.name = this.state.selectedItem;\n      obj.qty = event.target.value; //    obj.rate=returnRate(this.selectedItem);\n\n      for (let i = 0; i < temp.length; i++) {\n        if (i === event.target.parentNode.parentNode.rowIndex - 1) {\n          console.log(temp[i].rate);\n          temp[i].qty = event.target.value;\n          break;\n        }\n      }\n\n      this.setState({\n        tableItems: temp\n      });\n      console.log(\"Selected Item --------->\", this.state.tableItems);\n    };\n\n    this.changeAction = event => {\n      console.log(\"Clicked!\");\n    };\n\n    this.addRows = event => {\n      console.log(\"Add row Action\");\n      var temp = this.state.tableItems;\n\n      for (var i = 0; i < 2; i++) {\n        var newRows = {\n          rowId: this.state.tableItems.length + 1,\n          optionSelected: \"\",\n          rate: 0,\n          qty: 1\n        };\n        temp.push(newRows);\n      }\n\n      this.setState({\n        tableItems: temp\n      });\n    };\n\n    this.state = {\n      selectedItem: {},\n      qty: 1,\n      total: 0,\n      value: 0,\n      quantity: 0,\n      items: [],\n      selectedItems: [],\n      tableItems: [{\n        rowId: 0,\n        optionSelected: \"\",\n        rate: 0,\n        qty: 1\n      }, {\n        rowId: 1,\n        optionSelected: \"\",\n        rate: 0,\n        qty: 1\n      }, {\n        rowId: 2,\n        optionSelected: \"\",\n        rate: 0,\n        qty: 1\n      }, {\n        rowId: 3,\n        optionSelected: \"\",\n        rate: 0,\n        qty: 1\n      }, {\n        rowId: 4,\n        optionSelected: \"\",\n        rate: 0,\n        qty: 1\n      }],\n      item: {\n        id: 0,\n        name: \"\",\n        quantity: 0,\n        rate: 0,\n        total: 0\n      },\n      rates: [],\n      rowInfo: []\n    };\n  }\n\n  componentDidMount() {\n    fetch('/menu/getMenu').then(response => response.json()).then(result => {\n      this.setState({\n        items: result,\n        selectedItems: result\n      });\n    }, error => {\n      this.setState({\n        error\n      });\n    });\n  }\n\n  changeOption(currentSelection, rowId) {\n    console.log(\"Change Option\", currentSelection, rowId);\n    var temp = this.state.items;\n    console.log(\"All--------->\", temp);\n    var currenItem = this.state.items.find(data => data.name + \"-\" + data.code == currentSelection);\n    console.log(\"currenItem--------->\", currenItem); //  currenItem.rate=temp.find(data => (data.name+\"-\"+data.code)==currentSelection).rate;\n\n    console.log(\"currenItem update1--------->\", currenItem);\n    this.setState({\n      selectedItem: currenItem\n    });\n    var tableItemsCopy = this.state.tableItems;\n    tableItemsCopy[rowId].optionSelected = currenItem.name;\n    tableItemsCopy[rowId].rate = currenItem.rate;\n    tableItemsCopy[rowId].qty = 1;\n    this.setState({\n      tableItems: tableItemsCopy\n    });\n    console.log(\"tableItems------->\", this.state.tableItems);\n  }\n\n  returnRate(item) {\n    var temp = this.state.selectedItems;\n\n    for (let i = 0; i < temp.length; i++) {\n      if (i === item) {\n        console.log(temp[i].rate);\n        return this.state.selectedItems[i].rate;\n      }\n    }\n  }\n\n  returnPrice(rate, item) {\n    for (let i = 0; i < this.state.tableItems.length; i++) {\n      if (i === item) {\n        console.log(this.state.tableItems[i].rate);\n        if (isNaN(rate * this.state.tableItems[i].qty)) return 0;else {\n          return rate * this.state.tableItems[i].qty;\n        }\n      }\n    }\n  }\n\n  showRate(data, event) {\n    return this.state.rowInfo.rate;\n  }\n\n  render() {\n    let count = 5;\n    const options = [];\n\n    for (let i = 0; i < this.state.items.length; i++) {\n      var temp = this.state.items[i];\n      temp.text = temp.name + \"-\" + temp.code;\n      temp.key = temp.code;\n      temp.flag = temp.code;\n      temp.value = temp.code;\n      options.push(temp);\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203\n      },\n      __self: this\n    }, React.createElement(\"table\", {\n      id: \"customers\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208\n      },\n      __self: this\n    }, \"S no\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209\n      },\n      __self: this\n    }, \"Item Name/Item Code\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210\n      },\n      __self: this\n    }, \"Qty\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211\n      },\n      __self: this\n    }, \"Rate/Qty\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212\n      },\n      __self: this\n    }, \"Price\"))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215\n      },\n      __self: this\n    }, this.state.tableItems.map((row, index) => {\n      return React.createElement(\"tr\", {\n        key: row.id,\n        onClick: this.changeAction,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 220\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        class: \"counterCell\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221\n        },\n        __self: this\n      }), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 222\n        },\n        __self: this\n      }, React.createElement(Dropdown, {\n        className: \"dropDown\",\n        placeholder: \"Select Item\",\n        fluid: true,\n        search: true,\n        selection: true,\n        options: options,\n        changed: this.changeOption.bind(this),\n        rowId: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 223\n        },\n        __self: this\n      })), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 233\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"number\",\n        defaultValue: \"1\",\n        min: \"1\",\n        onChange: this.valueChanged,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 235\n        },\n        __self: this\n      })), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 238\n        },\n        __self: this\n      }, row.rate == \"\" || row.rate == 0 ? 0 : row.rate), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 242\n        },\n        __self: this\n      }, this.returnPrice(row.rate, index)));\n    }))), React.createElement(\"button\", {\n      id: \"addBtn\",\n      onClick: this.addRows,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255\n      },\n      __self: this\n    }, \"Add Rows\"));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/91701/Desktop/hookup/test/client/src/Billing-Table/Multiple_Table.js"],"names":["React","Component","Dropdown","techCompanies","label","value","MutipleTable","constructor","props","valueChanged","event","console","log","state","selectedItems","setState","qty","target","temp","tableItems","obj","id","parentNode","rowIndex","name","selectedItem","i","length","rate","changeAction","addRows","newRows","rowId","optionSelected","push","total","quantity","items","item","rates","rowInfo","componentDidMount","fetch","then","response","json","result","error","changeOption","currentSelection","currenItem","find","data","code","tableItemsCopy","returnRate","returnPrice","isNaN","showRate","render","count","options","text","key","flag","map","row","index","bind"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,QAAP,MAAqB,sBAArB;AACA,OAAO,mBAAP;AACA,OAAO,sBAAP;AAEA,MAAMC,aAAa,GAAG,CACpB;AAAEC,EAAAA,KAAK,EAAE,OAAT;AAAkBC,EAAAA,KAAK,EAAE;AAAzB,CADoB,EAEpB;AAAED,EAAAA,KAAK,EAAE,UAAT;AAAqBC,EAAAA,KAAK,EAAE;AAA5B,CAFoB,EAGpB;AAAED,EAAAA,KAAK,EAAE,SAAT;AAAoBC,EAAAA,KAAK,EAAE;AAA3B,CAHoB,EAIpB;AAAED,EAAAA,KAAK,EAAE,OAAT;AAAkBC,EAAAA,KAAK,EAAE;AAAzB,CAJoB,EAKpB;AAAED,EAAAA,KAAK,EAAE,QAAT;AAAmBC,EAAAA,KAAK,EAAE;AAA1B,CALoB,EAMpB;AAAED,EAAAA,KAAK,EAAE,UAAT;AAAqBC,EAAAA,KAAK,EAAE;AAA5B,CANoB,CAAtB;AASA,eAAe,MAAMC,YAAN,SAA2BL,SAA3B,CAAoC;AAC/CM,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;;AADc,SAiGlBC,YAjGkB,GAiGJC,KAAD,IAAS;AAClBC,MAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ,EAAmC,KAAKC,KAAL,CAAWC,aAA9C;AACD,WAAKC,QAAL,CAAc;AAACC,QAAAA,GAAG,EAACN,KAAK,CAACO,MAAN,CAAaZ;AAAlB,OAAd;AACA,UAAIa,IAAI,GAAE,KAAKL,KAAL,CAAWM,UAArB;AACA,UAAIC,GAAG,GAAC,EAAR;AACAA,MAAAA,GAAG,CAACC,EAAJ,GAAOX,KAAK,CAACO,MAAN,CAAaK,UAAb,CAAwBA,UAAxB,CAAmCC,QAA1C;AACAH,MAAAA,GAAG,CAACI,IAAJ,GAAS,KAAKX,KAAL,CAAWY,YAApB;AACAL,MAAAA,GAAG,CAACJ,GAAJ,GAAQN,KAAK,CAACO,MAAN,CAAaZ,KAArB,CAPmB,CAQtB;;AACG,WAAI,IAAIqB,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACR,IAAI,CAACS,MAAnB,EAA0BD,CAAC,EAA3B,EACH;AACE,YAAIA,CAAC,KAAGhB,KAAK,CAACO,MAAN,CAAaK,UAAb,CAAwBA,UAAxB,CAAmCC,QAAnC,GAA4C,CAApD,EAAsD;AACrDZ,UAAAA,OAAO,CAACC,GAAR,CAAYM,IAAI,CAACQ,CAAD,CAAJ,CAAQE,IAApB;AACCV,UAAAA,IAAI,CAACQ,CAAD,CAAJ,CAAQV,GAAR,GAAcN,KAAK,CAACO,MAAN,CAAaZ,KAA3B;AACD;AAEA;AAEF;;AAEE,WAAKU,QAAL,CAAc;AACbI,QAAAA,UAAU,EAACD;AADE,OAAd;AAGAP,MAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ,EAAuC,KAAKC,KAAL,CAAWM,UAAlD;AACJ,KAzHmB;;AAAA,SA4JpBU,YA5JoB,GA4JNnB,KAAD,IAAS;AAClBC,MAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AACH,KA9JmB;;AAAA,SA+JpBkB,OA/JoB,GA+JXpB,KAAD,IAAS;AACfC,MAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AACA,UAAIM,IAAI,GAAC,KAAKL,KAAL,CAAWM,UAApB;;AACA,WAAI,IAAIO,CAAC,GAAC,CAAV,EAAYA,CAAC,GAAC,CAAd,EAAgBA,CAAC,EAAjB,EAAoB;AACpB,YAAIK,OAAO,GAAG;AACZC,UAAAA,KAAK,EAAC,KAAKnB,KAAL,CAAWM,UAAX,CAAsBQ,MAAtB,GAA6B,CADvB;AAEVM,UAAAA,cAAc,EAAC,EAFL;AAGVL,UAAAA,IAAI,EAAC,CAHK;AAIVZ,UAAAA,GAAG,EAAC;AAJM,SAAd;AAMAE,QAAAA,IAAI,CAACgB,IAAL,CAAUH,OAAV;AACD;;AACC,WAAKhB,QAAL,CAAc;AAACI,QAAAA,UAAU,EAACD;AAAZ,OAAd;AACD,KA5KmB;;AAEd,SAAKL,KAAL,GAAW;AACPY,MAAAA,YAAY,EAAC,EADN;AAEPT,MAAAA,GAAG,EAAC,CAFG;AAGPmB,MAAAA,KAAK,EAAE,CAHA;AAIP9B,MAAAA,KAAK,EAAE,CAJA;AAKP+B,MAAAA,QAAQ,EAAE,CALH;AAMPC,MAAAA,KAAK,EAAE,EANA;AAOPvB,MAAAA,aAAa,EAAE,EAPR;AAQPK,MAAAA,UAAU,EAAC,CACT;AACEa,QAAAA,KAAK,EAAC,CADR;AAEEC,QAAAA,cAAc,EAAC,EAFjB;AAGEL,QAAAA,IAAI,EAAC,CAHP;AAIEZ,QAAAA,GAAG,EAAC;AAJN,OADS,EAOX;AACEgB,QAAAA,KAAK,EAAC,CADR;AAEEC,QAAAA,cAAc,EAAC,EAFjB;AAGEL,QAAAA,IAAI,EAAC,CAHP;AAIEZ,QAAAA,GAAG,EAAC;AAJN,OAPW,EAYV;AACDgB,QAAAA,KAAK,EAAC,CADL;AAEDC,QAAAA,cAAc,EAAC,EAFd;AAGDL,QAAAA,IAAI,EAAC,CAHJ;AAIDZ,QAAAA,GAAG,EAAC;AAJH,OAZU,EAiBZ;AACDgB,QAAAA,KAAK,EAAC,CADL;AAEDC,QAAAA,cAAc,EAAC,EAFd;AAGDL,QAAAA,IAAI,EAAC,CAHJ;AAIDZ,QAAAA,GAAG,EAAC;AAJH,OAjBY,EAuBjB;AACEgB,QAAAA,KAAK,EAAC,CADR;AAEEC,QAAAA,cAAc,EAAC,EAFjB;AAGEL,QAAAA,IAAI,EAAC,CAHP;AAIEZ,QAAAA,GAAG,EAAC;AAJN,OAvBiB,CARJ;AAsCPsB,MAAAA,IAAI,EAAE;AACFjB,QAAAA,EAAE,EAAE,CADF;AAEFG,QAAAA,IAAI,EAAE,EAFJ;AAGFY,QAAAA,QAAQ,EAAE,CAHR;AAIFR,QAAAA,IAAI,EAAE,CAJJ;AAKFO,QAAAA,KAAK,EAAE;AALL,OAtCC;AA6CPI,MAAAA,KAAK,EAAC,EA7CC;AA8CPC,MAAAA,OAAO,EAAC;AA9CD,KAAX;AAgDH;;AAEDC,EAAAA,iBAAiB,GAAG;AAChBC,IAAAA,KAAK,CAAC,eAAD,CAAL,CACGC,IADH,CACQC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADpB,EAEGF,IAFH,CAESG,MAAD,IAAY;AAChB,WAAK/B,QAAL,CAAc;AAEVsB,QAAAA,KAAK,EAAES,MAFG;AAGThC,QAAAA,aAAa,EAACgC;AAHL,OAAd;AAMD,KATH,EAWGC,KAAD,IAAW;AACT,WAAKhC,QAAL,CAAc;AACZgC,QAAAA;AADY,OAAd;AAGD,KAfH;AAoBH;;AAGDC,EAAAA,YAAY,CAACC,gBAAD,EAAkBjB,KAAlB,EAAwB;AACjCrB,IAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA4BqC,gBAA5B,EAA6CjB,KAA7C;AACA,QAAId,IAAI,GAAC,KAAKL,KAAL,CAAWwB,KAApB;AACA1B,IAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA4BM,IAA5B;AACA,QAAIgC,UAAU,GAAG,KAAKrC,KAAL,CAAWwB,KAAX,CAAiBc,IAAjB,CAAsBC,IAAI,IAAIA,IAAI,CAAC5B,IAAL,GAAU,GAAV,GAAc4B,IAAI,CAACC,IAAnB,IAAyBJ,gBAAvD,CAAjB;AACAtC,IAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ,EAAmCsC,UAAnC,EALiC,CAMlC;;AACCvC,IAAAA,OAAO,CAACC,GAAR,CAAY,8BAAZ,EAA2CsC,UAA3C;AAEA,SAAKnC,QAAL,CAAc;AAACU,MAAAA,YAAY,EAACyB;AAAd,KAAd;AACA,QAAII,cAAc,GAAG,KAAKzC,KAAL,CAAWM,UAAhC;AACAmC,IAAAA,cAAc,CAACtB,KAAD,CAAd,CAAsBC,cAAtB,GAAuCiB,UAAU,CAAC1B,IAAlD;AACA8B,IAAAA,cAAc,CAACtB,KAAD,CAAd,CAAsBJ,IAAtB,GAA6BsB,UAAU,CAACtB,IAAxC;AACA0B,IAAAA,cAAc,CAACtB,KAAD,CAAd,CAAsBhB,GAAtB,GAA4B,CAA5B;AAEA,SAAKD,QAAL,CAAc;AACZI,MAAAA,UAAU,EAACmC;AADC,KAAd;AAGH3C,IAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ,EAAiC,KAAKC,KAAL,CAAWM,UAA5C;AAEC;;AA2BHoC,EAAAA,UAAU,CAACjB,IAAD,EAAM;AACd,QAAIpB,IAAI,GAAE,KAAKL,KAAL,CAAWC,aAArB;;AACA,SAAI,IAAIY,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACR,IAAI,CAACS,MAAnB,EAA0BD,CAAC,EAA3B,EACA;AACE,UAAGA,CAAC,KAAGY,IAAP,EAAY;AACX3B,QAAAA,OAAO,CAACC,GAAR,CAAYM,IAAI,CAACQ,CAAD,CAAJ,CAAQE,IAApB;AACA,eAAO,KAAKf,KAAL,CAAWC,aAAX,CAAyBY,CAAzB,EAA4BE,IAAnC;AAEA;AAEF;AACF;;AAED4B,EAAAA,WAAW,CAAC5B,IAAD,EAAMU,IAAN,EAAW;AACpB,SAAI,IAAIZ,CAAC,GAAC,CAAV,EAAYA,CAAC,GAAC,KAAKb,KAAL,CAAWM,UAAX,CAAsBQ,MAApC,EAA2CD,CAAC,EAA5C,EACA;AACE,UAAIA,CAAC,KAAGY,IAAR,EAAa;AACZ3B,QAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAL,CAAWM,UAAX,CAAsBO,CAAtB,EAAyBE,IAArC;AACA,YAAG6B,KAAK,CAAC7B,IAAI,GAAG,KAAKf,KAAL,CAAWM,UAAX,CAAsBO,CAAtB,EAAyBV,GAAjC,CAAR,EACA,OAAO,CAAP,CADA,KAEI;AACH,iBAAOY,IAAI,GAAG,KAAKf,KAAL,CAAWM,UAAX,CAAsBO,CAAtB,EAAyBV,GAAvC;AACA;AAGD;AAEF;AACF;;AACD0C,EAAAA,QAAQ,CAACN,IAAD,EAAM1C,KAAN,EAAY;AAClB,WAAO,KAAKG,KAAL,CAAW2B,OAAX,CAAmBZ,IAA1B;AACD;;AAmBC+B,EAAAA,MAAM,GAAE;AACJ,QAAIC,KAAK,GAAC,CAAV;AACA,UAAMC,OAAO,GAAC,EAAd;;AACA,SAAI,IAAInC,CAAC,GAAC,CAAV,EAAYA,CAAC,GAAC,KAAKb,KAAL,CAAWwB,KAAX,CAAiBV,MAA/B,EAAsCD,CAAC,EAAvC,EAA0C;AACtC,UAAIR,IAAI,GAAG,KAAKL,KAAL,CAAWwB,KAAX,CAAiBX,CAAjB,CAAX;AACAR,MAAAA,IAAI,CAAC4C,IAAL,GAAU5C,IAAI,CAACM,IAAL,GAAU,GAAV,GAAcN,IAAI,CAACmC,IAA7B;AACAnC,MAAAA,IAAI,CAAC6C,GAAL,GAAS7C,IAAI,CAACmC,IAAd;AACAnC,MAAAA,IAAI,CAAC8C,IAAL,GAAU9C,IAAI,CAACmC,IAAf;AACAnC,MAAAA,IAAI,CAACb,KAAL,GAAWa,IAAI,CAACmC,IAAhB;AACAQ,MAAAA,OAAO,CAAC3B,IAAR,CAAahB,IAAb;AACH;;AAED,WAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEE;AAAO,MAAA,EAAE,EAAC,WAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAHJ,EAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJJ,EAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eALJ,CADA,CADA,EAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEQ,KAAKL,KAAL,CAAWM,UAAX,CAAsB8C,GAAtB,CAA0B,CAACC,GAAD,EAAKC,KAAL,KAAa;AACpC,aAEC;AAAI,QAAA,GAAG,EAAED,GAAG,CAAC7C,EAAb;AAAkB,QAAA,OAAO,EAAE,KAAKQ,YAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAI,QAAA,KAAK,EAAC,aAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,QAAD;AAAU,QAAA,SAAS,EAAC,UAApB;AACH,QAAA,WAAW,EAAC,aADT;AAEH,QAAA,KAAK,MAFF;AAGH,QAAA,MAAM,MAHH;AAIH,QAAA,SAAS,MAJN;AAKH,QAAA,OAAO,EAAEgC,OALN;AAMH,QAAA,OAAO,EAAE,KAAKb,YAAL,CAAkBoB,IAAlB,CAAuB,IAAvB,CANN;AAOH,QAAA,KAAK,EAAED,KAPJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CAFJ,EAaI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEK;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAqB,QAAA,YAAY,EAAC,GAAlC;AAAsC,QAAA,GAAG,EAAC,GAA1C;AAA8C,QAAA,QAAQ,EAAE,KAAK1D,YAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFL,CAbJ,EAkBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACCyD,GAAG,CAACtC,IAAJ,IAAU,EAAV,IAAesC,GAAG,CAACtC,IAAJ,IAAU,CAAzB,GAA6B,CAA7B,GAAiCsC,GAAG,CAACtC,IADtC,CAlBJ,EAsBK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACK,KAAK4B,WAAL,CAAiBU,GAAG,CAACtC,IAArB,EAA0BuC,KAA1B,CADL,CAtBL,CAFD;AA8BH,KA/BA,CAFR,CAVA,CAFF,EAoDF;AAAQ,MAAA,EAAE,EAAC,QAAX;AAAoB,MAAA,OAAO,EAAE,KAAKrC,OAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBApDE,CAFF;AA0DH;;AApP8C","sourcesContent":["import React, { Component } from 'react';\r\nimport Dropdown from '../DropDown/Dropdown';\r\nimport './Table-style.css';\r\nimport './Multiple-Table.css';\r\n\r\nconst techCompanies = [\r\n  { label: \"Apple\", value: 1 },\r\n  { label: \"Facebook\", value: 2 },\r\n  { label: \"Netflix\", value: 3 },\r\n  { label: \"Tesla\", value: 4 },\r\n  { label: \"Amazon\", value: 5 },\r\n  { label: \"Alphabet\", value: 6 },\r\n];\r\n\r\nexport default class MutipleTable extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            selectedItem:{},\r\n            qty:1,\r\n            total: 0,\r\n            value: 0,\r\n            quantity: 0,\r\n            items: [ ],\r\n            selectedItems: [],\r\n            tableItems:[\r\n              {\r\n                rowId:0,\r\n                optionSelected:\"\",\r\n                rate:0,\r\n                qty:1\r\n            },\r\n            {\r\n              rowId:1,\r\n              optionSelected:\"\",\r\n              rate:0,\r\n              qty:1\r\n          }, {\r\n            rowId:2,\r\n            optionSelected:\"\",\r\n            rate:0,\r\n            qty:1\r\n        }, {\r\n          rowId:3,\r\n          optionSelected:\"\",\r\n          rate:0,\r\n          qty:1\r\n      },\r\n      {\r\n        rowId:4,\r\n        optionSelected:\"\",\r\n        rate:0,\r\n        qty:1\r\n    }\r\n          ],\r\n            item: {\r\n                id: 0,\r\n                name: \"\",\r\n                quantity: 0,\r\n                rate: 0,\r\n                total: 0\r\n            },\r\n            rates:[],\r\n            rowInfo:[]\r\n                }\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetch('/menu/getMenu')\r\n          .then(response => response.json())\r\n          .then((result) => {\r\n            this.setState({\r\n              \r\n                items: result\r\n                ,selectedItems:result\r\n            });\r\n            \r\n          },\r\n          \r\n          (error) => {\r\n            this.setState({\r\n              error\r\n            });\r\n          });\r\n\r\n         \r\n          \r\n\r\n    }\r\n\r\n   \r\n    changeOption(currentSelection,rowId){\r\n       console.log(\"Change Option\",currentSelection,rowId);\r\n       var temp=this.state.items;\r\n       console.log(\"All--------->\",temp);\r\n       var currenItem = this.state.items.find(data => data.name+\"-\"+data.code==currentSelection);\r\n       console.log(\"currenItem--------->\",currenItem);\r\n      //  currenItem.rate=temp.find(data => (data.name+\"-\"+data.code)==currentSelection).rate;\r\n       console.log(\"currenItem update1--------->\",currenItem);\r\n      \r\n       this.setState({selectedItem:currenItem});\r\n       var tableItemsCopy = this.state.tableItems;\r\n       tableItemsCopy[rowId].optionSelected = currenItem.name;\r\n       tableItemsCopy[rowId].rate = currenItem.rate;\r\n       tableItemsCopy[rowId].qty = 1;\r\n\r\n       this.setState({\r\n         tableItems:tableItemsCopy\r\n       });\r\n    console.log(\"tableItems------->\",this.state.tableItems)\r\n\r\n    }\r\n    valueChanged=(event)=>{\r\n        console.log(\"Value is----------->\",this.state.selectedItems);\r\n       this.setState({qty:event.target.value});\r\n       var temp =this.state.tableItems;\r\n       var obj={};\r\n       obj.id=event.target.parentNode.parentNode.rowIndex;\r\n       obj.name=this.state.selectedItem;\r\n       obj.qty=event.target.value;\r\n    //    obj.rate=returnRate(this.selectedItem);\r\n       for(let i=0;i<temp.length;i++)\r\n    {\r\n      if( i===event.target.parentNode.parentNode.rowIndex-1){\r\n       console.log(temp[i].rate); \r\n        temp[i].qty = event.target.value;\r\n       break;\r\n        \r\n      }\r\n      \r\n    }\r\n \r\n       this.setState({\r\n        tableItems:temp\r\n       });\r\n       console.log(\"Selected Item --------->\",this.state.tableItems);\r\n  }\r\n\r\n  returnRate(item){\r\n    var temp =this.state.selectedItems;\r\n    for(let i=0;i<temp.length;i++)\r\n    {\r\n      if(i===item){\r\n       console.log(temp[i].rate); \r\n       return this.state.selectedItems[i].rate;\r\n        \r\n      }\r\n      \r\n    }\r\n  }\r\n\r\n  returnPrice(rate,item){\r\n    for(let i=0;i<this.state.tableItems.length;i++)\r\n    {\r\n      if( i===item){\r\n       console.log(this.state.tableItems[i].rate); \r\n       if(isNaN(rate * this.state.tableItems[i].qty))\r\n       return 0;\r\n       else{\r\n        return rate * this.state.tableItems[i].qty;\r\n       }\r\n      \r\n        \r\n      }\r\n      \r\n    }\r\n  }\r\n  showRate(data,event){\r\n    return this.state.rowInfo.rate;\r\n  }\r\n\r\n  changeAction=(event)=>{\r\n      console.log(\"Clicked!\");\r\n  }\r\n  addRows=(event)=>{\r\n    console.log(\"Add row Action\");\r\n    var temp=this.state.tableItems;\r\n    for(var i=0;i<2;i++){\r\n    var newRows = {\r\n      rowId:this.state.tableItems.length+1,\r\n        optionSelected:\"\",\r\n        rate:0,\r\n        qty:1\r\n    }\r\n    temp.push(newRows);\r\n  }\r\n    this.setState({tableItems:temp});\r\n  }\r\n    render(){\r\n        let count=5;\r\n        const options=[];\r\n        for(let i=0;i<this.state.items.length;i++){\r\n            var temp = this.state.items[i];\r\n            temp.text=temp.name+\"-\"+temp.code;\r\n            temp.key=temp.code;\r\n            temp.flag=temp.code;\r\n            temp.value=temp.code;\r\n            options.push(temp);\r\n        }\r\n\r\n        return(\r\n\r\n          <div>\r\n\r\n            <table id=\"customers\">\r\n            <thead>\r\n            <tr>\r\n                <th>S no</th>\r\n                <th>Item Name/Item Code</th>\r\n                <th>Qty</th>\r\n                <th>Rate/Qty</th>\r\n                <th>Price</th>\r\n            </tr>\r\n            </thead>\r\n            <tbody>\r\n         \r\n                   {this.state.tableItems.map((row,index)=>{\r\n                       return (\r\n                        \r\n                        <tr key={row.id } onClick={this.changeAction}>\r\n                          <td class=\"counterCell\"></td>\r\n                            <td>\r\n                                <Dropdown className=\"dropDown\"\r\n                             placeholder='Select Item'\r\n                             fluid\r\n                             search\r\n                             selection\r\n                             options={options}\r\n                             changed={this.changeOption.bind(this)}\r\n                             rowId={index}\r\n                             />\r\n                             </td>  \r\n                            <td>\r\n                                 \r\n                                 <input type=\"number\" defaultValue=\"1\" min=\"1\" onChange={this.valueChanged}/>\r\n                             \r\n                            </td>\r\n                            <td>\r\n                            {row.rate==\"\"|| row.rate==0 ? 0 : row.rate}\r\n                             \r\n                             </td>\r\n                             <td>\r\n                                 {this.returnPrice(row.rate,index)}\r\n                             </td>\r\n                             \r\n                        </tr>\r\n                    )\r\n                   })}\r\n                     \r\n                \r\n                \r\n            </tbody>\r\n        </table>\r\n\r\n        <button id=\"addBtn\" onClick={this.addRows}>Add Rows</button>\r\n        </div>\r\n\r\n        );\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}